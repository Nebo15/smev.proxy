package org.apache.cxf.hello_world_soap_http;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.2
 * 2014-11-16T01:38:53.567+02:00
 * Generated source version: 3.0.2
 * 
 */
@WebServiceClient(name = "GreeterService", 
                  wsdlLocation = "file:/C:/projects/apache-cxf-3.0.2/samples/ws_security/sign_enc/wsdl/hello_world_wssec.wsdl",
                  targetNamespace = "http://cxf.apache.org/hello_world_soap_http") 
public class GreeterService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://cxf.apache.org/hello_world_soap_http", "GreeterService");
    public final static QName GreeterPort = new QName("http://cxf.apache.org/hello_world_soap_http", "GreeterPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/projects/apache-cxf-3.0.2/samples/ws_security/sign_enc/wsdl/hello_world_wssec.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(GreeterService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/projects/apache-cxf-3.0.2/samples/ws_security/sign_enc/wsdl/hello_world_wssec.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public GreeterService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public GreeterService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GreeterService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterPort")
    public Greeter getGreeterPort() {
        return super.getPort(GreeterPort, Greeter.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Greeter
     */
    @WebEndpoint(name = "GreeterPort")
    public Greeter getGreeterPort(WebServiceFeature... features) {
        return super.getPort(GreeterPort, Greeter.class, features);
    }

}
